package app.controller;


import app.model.User;
import app.repository.UserRepository;
import app.specification.UserSpecification;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @RequestMapping(path = "/add", method = {RequestMethod.GET, RequestMethod.POST}) // Map ONLY GET Requests
    public @ResponseBody
    String addNewUser(@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setEmail(email);
        User userSaved = userRepository.save(n);
        return userSaved.toString();
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path = "/search")
    public @ResponseBody
    Iterable<User> getAllUsers(@RequestParam(name = "id", required = false) Integer id,
                               @RequestParam(name = "name", required = false) String name,
                               @RequestParam(name = "email", required = false) String email) {
        User filter = new User();
        filter.setId(id);
        filter.setName(name);
        filter.setEmail(email);

        Specification<User> spec = new UserSpecification(filter);
        return userRepository.findAll(spec);
    }
}
